name: tests
on:
  push:
    branches-ignore: [main]
  workflow_dispatch:

jobs:
  yarn-lockfile-check:
    uses: salesforcecli/github-workflows/.github/workflows/lockFileCheck.yml@main
  # Since the Windows unit tests take much longer, we run the linux unit tests first and then run the windows unit tests in parallel with NUTs
  test-bundle:
    runs-on: ubuntu-latest
    name: test bundling
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: yarn
      - uses: salesforcecli/github-workflows/.github/actions/yarnInstallWithRetries@main
      - name: Build the project
        run: yarn build
      - name: check if bundling runs into failures
        run: node scripts/esbuild.config.mjs
  linux-unit-tests:
    needs: yarn-lockfile-check
    uses: salesforcecli/github-workflows/.github/workflows/unitTestsLinux.yml@main
  windows-unit-tests:
    needs: linux-unit-tests
    uses: salesforcecli/github-workflows/.github/workflows/unitTestsWindows.yml@main
  nuts:
    needs: linux-unit-tests
    uses: salesforcecli/github-workflows/.github/workflows/nut.yml@main
    secrets: inherit
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
      fail-fast: false
    with:
      os: ${{ matrix.os }}

  xNuts-pdr:
    needs: linux-unit-tests
    uses: salesforcecli/github-workflows/.github/workflows/externalNut.yml@main
    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu-latest', 'windows-latest']
        command:
          - 'yarn test:nuts:tracking'
          - 'yarn test:nuts:deb'
    with:
      packageName: '@salesforce/source-tracking'
      externalProjectGitUrl: 'https://github.com/salesforcecli/plugin-deploy-retrieve'
      command: ${{matrix.command}}
      os: ${{matrix.os}}
      preSwapCommands: 'yarn upgrade @salesforce/source-deploy-retrieve@latest; npx yarn-deduplicate; yarn install'
      useCache: false
    secrets: inherit
